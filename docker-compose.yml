version: '3.5'

volumes:
  redisdata:
    driver: local

networks:
  cyrulik:
    driver: bridge

services:

  zipkin-service:
    container_name: zipkin-service
    env_file:
      - .env
    image: openzipkin/zipkin:2.10.1
    environment:
      STORAGE_TYPE: mem
    restart: always
    ports:
      - "${CONFIG_SERVICE_PORT_ZIPKIN}:9411"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9411/health"]
      interval: 60s
      timeout: 10s
      retries: 10
    networks:
      - cyrulik


  cassandra-account:
    container_name: cassandra-account
    env_file:
      - .env
    image: spotify/cassandra
    ports:
      - "${CONFIG_DATABASE_PORT_ACCOUNT}:9042"
    healthcheck:
      test: ["CMD", "cqlsh", "--execute", "show version;quit"]
      interval: 60s
      timeout: 10s
      retries: 5
    networks:
      - cyrulik


  zookeeper:
    image: wurstmeister/zookeeper
    env_file:
      - .env
    container_name: zookeeper
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 60s
      timeout: 10s
      retries: 5
    ports:
      - "${CONFIG_SERVICE_PORT_ZOOKEEPER}:2181"
    networks:
      - cyrulik


  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    hostname: kafka
    env_file:
      - .env
    ports:
      - "${CONFIG_SERVICE_PORT_KAFKA}:9092/tcp"
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      start_period: 20s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - cyrulik


  redis:
    image: redis:4-alpine
    env_file:
      - .env
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "${CONFIG_SERVICE_PORT_REDIS}:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks:
      - cyrulik

